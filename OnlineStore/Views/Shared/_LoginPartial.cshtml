@using Microsoft.AspNetCore.Identity
@using OnlineStore.Services.Data.Contacts;
@using OnlineStore.Web.Infrastructure.Extensions;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ISellerService sellerService;
@inject IUserService userService;

@{
    var userId = User.GetId();
    bool isSellerExist = await sellerService.ExistsByIdAsync(userId);
    bool isSellerApproved = await sellerService.IsUserApprovedAsync(userId);
    bool IsSellerRejected = await sellerService.IsAdminRejectedAsync(userId);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (isSellerExist == false || IsSellerRejected == true)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Seller" asp-action="Become">Become a Seller</a>
            </li>
        }

        if(!User.IsAdmin())
        {
            @if (isSellerExist == false)
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="ShoppingCart" asp-action="CartItem">
                        <i class="fas fa-shopping-cart"></i>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="Myorder">My orders</a>
                </li>
            }
            else
            {
                <a class="nav-link text-dark" asp-area="" asp-controller="Order" asp-action="OrdersForProduct">Orders for Delivering</a>
            }
        }

        @if (await userService.GetUserFullNameAsync(User.GetId())is var fullName && fullName != null)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @fullName</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
            </li>
        }

  
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
